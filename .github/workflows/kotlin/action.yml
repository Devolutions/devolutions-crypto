name: Build Kotlin Package
runs:
  using: composite
  steps:
    - name: Download Version File
      uses: actions/download-artifact@v4
      with:
        name: config.txt

    - name: Read Version and Set Gradle Property
      shell: bash
      id: setup
      run: |
        version=$(grep "version" config.txt | sed -E 's/version = "(.*)"/\1/')
        echo "version=$version" >> $GITHUB_OUTPUT

    - name:  Installing dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install nuget gcc-multilib software-properties-common
        sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Install rust
      shell: bash
      run: |
        rustup update

        rustup target add x86_64-unknown-linux-gnu
        rustup target add i686-unknown-linux-gnu
        rustup target add aarch64-unknown-linux-gnu

        rustup target add aarch64-linux-android
        rustup target add armv7-linux-androideabi
        rustup target add i686-linux-android
        rustup target add x86_64-linux-android

    - name:  Installing Kotlin
      shell: bash
      run: sudo snap install --classic kotlin

    - name:  Installing ktlint
      shell: bash
      run: sudo snap install ktlint --edge --devmode

    - name: Configure Android NDK
      shell: bash
      run: |
        # Install NDK 27

        ANDROID_ROOT="/usr/local/lib/android"
        ANDROID_SDK_ROOT="${ANDROID_ROOT}/sdk"
        SDKMANAGER="${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager"
        echo "y" | $SDKMANAGER "ndk;27.2.12479018"

        export ANDROID_NDK=$ANDROID_SDK_ROOT/ndk-bundle

        echo "
        [target.aarch64-linux-android]
        ar = \"$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar\"
        linker = \"$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang\"
        [target.armv7-linux-androideabi]
        ar = \"$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar\"
        linker = \"$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi21-clang\"
        [target.i686-linux-android]
        ar = \"$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar\"
        linker = \"$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android21-clang\"
        [target.x86_64-linux-android]
        ar = \"$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar\"
        linker = \"$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android21-clang\"" >> ./.cargo/config.toml

    - name: Build
      shell: bash
      working-directory: ./wrappers/kotlin
      run: |
        export ANDROID_ROOT="/usr/local/lib/android"
        export ANDROID_SDK_ROOT="${ANDROID_ROOT}/sdk"
        export ANDROID_NDK=$ANDROID_SDK_ROOT/ndk-bundle
        ln -sfn $ANDROID_SDK_ROOT/ndk/27.2.12479018 $ANDROID_NDK

        # Set environment variables for blake3 custom build script
        export CC_aarch64_linux_android="$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang"
        export AR_aarch64_linux_android="$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar"
        export CC_armv7_linux_androideabi="$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi21-clang"
        export AR_armv7_linux_androideabi="$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar"
        export CC_i686_linux_android="$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android21-clang"
        export AR_i686_linux_android="$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar"
        export CC_x86_64_linux_android="$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android21-clang"
        export AR_x86_64_linux_android="$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar"

        make release RELEASE=1

        chmod +x gradlew
        ./gradlew test
        ./gradlew build
        ./gradlew generatePomFileForMavenPublication

    - name: Set version in pom file
      run: sed -i '0,/<version>.*<\/version>/ s//<version>'"${{ steps.setup.outputs.version }}"'<\/version>/' 'lib/build/publications/maven/pom-default.xml'
      shell: bash
      working-directory: ./wrappers/kotlin

    - name: Upload Kotlin package
      uses: actions/upload-artifact@v4.3.6
      with:
        name: kotlin
        path: ./wrappers/kotlin/lib/build

