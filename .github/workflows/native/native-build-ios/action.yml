name: Native Build iOS
description: This builds the iOS native libraries
runs:
  using: composite
  steps:
    - name:  Install Rust
      shell: bash
      run: |
        set -e
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Setup iOS minimum version
      shell: bash
      run: echo "IPHONEOS_DEPLOYMENT_TARGET=12.1" >> $GITHUB_ENV

    - name: Setup Apple Rust toolchain
      shell: pwsh
      run: |
        $RustupToolchains = Resolve-Path "~/.rustup/toolchains"
        $ToolchainPrefix = Join-Path $RustupToolchains "prebuilt"
        New-Item -ItemType Directory -Path $ToolchainPrefix | Out-Null

        $DownloadPath = "/tmp/rust-download"
        New-Item -ItemType Directory -Path $DownloadPath | Out-Null
        Push-Location
        Set-Location $DownloadPath

        @(
          "rustc-1.64.0-x86_64-apple-darwin.tar.xz",
          "rustc-dev-1.64.0-x86_64-apple-darwin.tar.xz",
          "rust-dev-1.64.0-x86_64-apple-darwin.tar.xz",
          "rust-std-1.64.0-x86_64-apple-darwin.tar.xz"
        ) | % {
          Write-Host "Downloading $_"
          wget -q https://github.com/awakecoding/llvm-prebuilt/releases/download/v2022.2.0/$_
        }

        @(
          "rust-std-1.64.0-aarch64-apple-darwin.tar.xz",
          "rust-std-1.64.0-x86_64-apple-ios.tar.xz",
          "rust-std-1.64.0-aarch64-apple-ios.tar.xz"
        ) | % {
          Write-Host "Downloading $_"
          wget -q https://static.rust-lang.org/dist/2022-09-22/$_
        }

        Get-Item *.tar.xz | % {
          $FileName = $_.Name
          $DirName = $FileName -Replace ".tar.xz",""
          Write-Host "Extracting $FileName"
          tar -xf $_
          & "./${DirName}/install.sh" "--prefix=$ToolchainPrefix"
        }

        Pop-Location

        rustup default prebuilt

    - name: Unit tests
      working-directory: ./devolutions-crypto
      shell: bash
      run: |
        source $HOME/.cargo/env
        cargo test

    - name: Building IOS
      working-directory: ./wrappers/csharp
      shell: bash
      run: |
        source $HOME/.cargo/env
        python3 GeneratePackage.py -p ios
        mkdir output
        mv ./ios ./output/ios
        

    - uses: actions/upload-artifact@v3
      with:
        name: artifact-staging
        path: wrappers/csharp/output/**