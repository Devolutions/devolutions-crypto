/*
 * This source file was generated by the Gradle 'init' task
 */
package org.devolutions.crypto

import org.junit.jupiter.api.assertThrows
import kotlin.test.Test
import kotlin.test.assertContentEquals
import kotlin.test.assertEquals

class SecretSharingTest {
    @Test
    fun sharedSecretDefaultTest() {
        val shares = generateSharedKey(5u, 3u)

        val shareGroup1 = shares.slice(0..2)
        val shareGroup2 = shares.slice(1..3)
        val shareGroup3 = shares.slice(2..4)

        val key1 = joinShares(shareGroup1)
        val key2 = joinShares(shareGroup2)
        val key3 = joinShares(shareGroup3)

        assertEquals(32, key1.size)
        assert(!key1.contentEquals(ByteArray(32) { 0 }))
        assertContentEquals(key1, key2)
        assertContentEquals(key1, key3)
    }

    @Test
    fun sharedSecretLargerTest() {
        val shares = generateSharedKey(5u, 3u, 41u)

        val shareGroup1 = shares.slice(0..2)
        val shareGroup2 = shares.slice(1..3)
        val shareGroup3 = shares.slice(2..4)

        val key1 = joinShares(shareGroup1)
        val key2 = joinShares(shareGroup2)
        val key3 = joinShares(shareGroup3)

        assertEquals(41, key1.size)
        assert(!key1.contentEquals(ByteArray(41) { 0 }))
        assertContentEquals(key1, key2)
        assertContentEquals(key1, key3)
    }

    @Test
    fun sharedSecretWrongParamsTest() {
        assertThrows<DevolutionsCryptoException> {
            generateSharedKey(3u, 5u)
        }
    }

    @Test
    fun sharedSecrectNotEnoughShare() {
        val shares = generateSharedKey(5u, 3u)
        val sharesGroup = shares.slice(0..1)
        assertThrows<DevolutionsCryptoException> {
            joinShares(sharesGroup)
        }
    }
}